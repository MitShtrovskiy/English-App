// src/pages/EditWordPage.tsx
import { useEffect, useState } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import { api } from '../utils/api'
import { Input } from '@/components/ui/input'
import { Textarea } from '@/components/ui/textarea'
import { Button } from '@/components/ui/button'

export default function EditWordPage() {
  const { id } = useParams()
  const navigate = useNavigate()

  const [word, setWord] = useState({
    word: '',
    translation: '',
    transcription: '',
    example: '',
  })

  const [error, setError] = useState<string | null>(null)

  // üîÑ –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–æ –ø–æ ID –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    if (id) {
      api.get(`/words/${id}`)
        .then((res) => setWord(res.data))
        .catch(() => setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ª–æ–≤–æ.'))
    }
  }, [id])

  // üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω–ø—É—Ç–æ–≤
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setWord((prev) => ({ ...prev, [name]: value }))
  }

  // ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const handleSubmit = async () => {
    if (!word.word.trim() || !word.translation.trim() || !word.example.trim()) {
      setError('–í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.')
      return
    }

    try {
      await api.put(`/words/${id}`, word)
      navigate('/words') // –ø—É—Ç—å –∫ —Å–ø–∏—Å–∫—É —Å–ª–æ–≤
    } catch {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.')
    }
  }

  // üóë –£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞
  const handleDelete = async () => {
    try {
      await api.delete(`/words/${id}`)
      navigate('/words')
    } catch {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏.')
    }
  }

  return (
    <div className="max-w-[430px] mx-auto px-4 py-6 space-y-6">
      {/* üîô –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ */}
      <div className="flex items-center justify-between">
        <Button variant="ghost" onClick={() => navigate(-1)}>
          ‚Üê –ù–∞–∑–∞–¥
        </Button>
        <Button variant="destructive" onClick={handleDelete}>
          –£–¥–∞–ª–∏—Ç—å
        </Button>
      </div>

      {/* üìù –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <div className="space-y-4">
        <Input
          name="word"
          placeholder="–°–ª–æ–≤–æ"
          value={word.word}
          onChange={handleChange}
        />
        <Input
          name="translation"
          placeholder="–ü–µ—Ä–µ–≤–æ–¥"
          value={word.translation}
          onChange={handleChange}
        />
        <Input
          name="transcription"
          placeholder="–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è"
          value={word.transcription}
          onChange={handleChange}
        />
        <Textarea
          name="example"
          placeholder="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
          value={word.example}
          onChange={handleChange}
        />
      </div>

      {/* ‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
      {error && <p className="text-red-500 text-sm">{error}</p>}

      {/* üíæ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å */}
      <Button onClick={handleSubmit} className="w-full mt-4">
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
      </Button>
    </div>
  )
}