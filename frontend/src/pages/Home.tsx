import { useEffect, useState } from 'react'
import { getWords } from '../api'
import { Word } from '../types'
import WordCard from '../components/WordCard'
import Navbar from '../components/Navbar'
import NavigationButtons from '../components/NavigationButtons'

export default function Home() {
  const [words, setWords] = useState<Word[]>([])
  const [currentIndex, setCurrentIndex] = useState(0)
  const [isLoading, setIsLoading] = useState(true)

  // üß† –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
  useEffect(() => {
    getWords()
      .then((data) => {
        console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞:', data) // üîç –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        setWords(data)
        setIsLoading(false)
      })
      .catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ª–æ–≤:', error)
        setIsLoading(false)
      })
  }, [])

  // ‚è© –°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
  const handleNext = () => {
    setCurrentIndex((prev) => (prev + 1) % words.length)
  }

  // ‚è™ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
  const handlePrev = () => {
    setCurrentIndex((prev) => (prev - 1 + words.length) % words.length)
  }

  // üåÄ –ï—Å–ª–∏ –∏–¥—ë—Ç –∑–∞–≥—Ä—É–∑–∫–∞ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-black text-white">
        <div className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤...</div>
      </div>
    )
  }

  // ‚ùå –ï—Å–ª–∏ —Å–ª–æ–≤ –Ω–µ—Ç –≤–æ–æ–±—â–µ ‚Äî –ø–æ–∫–∞–∂–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (!words.length) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-black text-white">
        <div className="text-lg">–°–ª–æ–≤ –Ω–µ—Ç. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ ¬´Upload¬ª</div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-black text-white relative overflow-hidden flex flex-col items-center pt-safe">
      {/* üîù –ù–∞–≤–±–∞—Ä */}
      <Navbar totalWords={words.length} learnedWords={words.filter(w => w.learned).length} />

      {/* üß† –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–ª–æ–≤–∞ */}
      <div className="flex flex-1 items-center justify-center w-full">
        <WordCard key={words[currentIndex].id} word={words[currentIndex]} />
      </div>

      {/* üîΩ –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <NavigationButtons onNext={handleNext} onPrev={handlePrev} />
    </div>
  )
}